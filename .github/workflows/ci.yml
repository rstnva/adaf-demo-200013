name: CI Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  # Job 1: Build and Test
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: timescale/timescaledb:latest-pg16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: adaf_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/adaf_test" > .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "NEXTAUTH_SECRET=test-secret-for-ci" >> .env
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Run database migrations
        run: pnpm prisma migrate deploy

      - name: Type check
        run: pnpm run typecheck

      - name: Run unit tests
        run: pnpm run test -- --run

      - name: Lint code
        run: pnpm run lint

      - name: Build application
        run: pnpm run build

  # Job 2: Integration Tests with RBAC
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build-and-test
    
    services:
      postgres:
        image: timescale/timescaledb:latest-pg16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: adaf_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/adaf_test" > .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "NEXTAUTH_SECRET=test-secret-for-ci" >> .env
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env

      - name: Generate Prisma client and migrate
        run: |
          pnpm prisma generate
          pnpm prisma migrate deploy

      - name: Seed RBAC test data
        run: |
          echo "Seeding RBAC data for integration tests..."
          if [ -f "prisma/seeds/seed_rbac.sql" ]; then
            PGPASSWORD=postgres psql -h localhost -U postgres -d adaf_test -f prisma/seeds/seed_rbac.sql
          fi

      - name: Build and start application
        run: |
          pnpm run build
          pnpm start &
          sleep 15
          curl --retry 10 --retry-delay 2 --retry-connrefused http://localhost:3000/api/read/whoami || echo "App startup check"
        env:
          PORT: 3000

      - name: Run RBAC smoke tests
        run: |
          if [ -f "tools/test_rbac.sh" ]; then
            chmod +x tools/test_rbac.sh
            BASE_URL=http://localhost:3000 ./tools/test_rbac.sh
          fi

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            *.log
            coverage/
